name: python_analysis
description: "🔍 Analyze Python project structure and dependencies"
triggers:
  - "analyze.*project"
  - "explore.*code"
  - "understand.*structure"
  - "investigate.*project"
  - "review.*structure"
  - "examine.*codebase"
  - "project.*overview"
steps:
  - "📄 **Discover Python files in your project**: `find . -name '*.py' -type f | grep -v .venv | grep -v __pycache__ | head -20`"
  - "📈 **Get a count of Python files**: `find . -name '*.py' -type f | grep -v .venv | grep -v __pycache__ | wc -l`"
  - "📁 **Understand project structure**: Use `tree -I '.venv|__pycache__' -L 3` or `find . -type d | head -15` to see organization"
  - "📦 **Check dependency configuration**: Look for `pyproject.toml`, `requirements.txt`, or `setup.py` files"
  - "📋 **Review dependencies**: If you have `pyproject.toml`, check the `[project.dependencies]` section"
  - "🧪 **Locate test files**: `find . -name 'test_*.py' -o -name '*_test.py'` to understand test coverage"
  - "📚 **Review documentation**: `find . -name 'README*' -o -name '*.md'` to see what docs exist"
  - "💡 **Consider improvements**: Missing tests, outdated dependencies, documentation gaps, or architectural opportunities"
project_types:
  - "python"
conditions:
  - "pattern:*.py"
