name: "📚 Documentation review and improvement"
description: "Analyze existing documentation, identify gaps, and suggest improvements for knowledge accumulation"
triggers:
  - "review documentation"
  - "check docs"
  - "documentation audit"
  - "improve docs"
  - "documentation gaps"
  - "knowledge review"
project_types:
  - "python"
  - "typescript"
  - "vue"
  - "javascript"
  - "rust"
  - "go"
  - "general"
dependencies:
  - "git (for analyzing recent changes)"
  - "find command (for discovering files)"
conditions:
  - "When documentation needs review or improvement"
  - "After significant development sessions"
  - "Before project milestones"
  - "When onboarding new contributors"
steps:
  - "� **Discover Documentation**: Run `find . -name '*.md' | head -20` to map existing docs and `find . -name 'README*'` for entry points"
  - "📊 **Analyze Structure**: Check for documentation directories, ADRs (`find . -name '*adr*'`), and documentation organization patterns"
  - "🔄 **Review Recent Activity**: Use `git log --oneline --since='2 weeks ago'` to identify commits that might need documentation updates"
  - "📂 **Check Modified Files**: Run `git log --name-only --since='1 week ago' | grep -E '\\.(py|ts|js|vue|rs|go|md)$'` for files needing doc updates"
  - "💡 **Identify API Gaps**: Look for public functions without docstrings, complex algorithms needing explanation, undocumented configuration files"
  - "🏗️ **Audit Architecture Docs**: Verify design decisions are documented, significant changes have ADRs, system architecture is explained"
  - "👥 **Review User-Facing Docs**: Ensure README is comprehensive, installation instructions clear, usage examples provided, API documented"
  - "🛠️ **Check Development Docs**: Verify coding standards, contribution guidelines, development setup, and testing procedures are documented"
  - "✅ **Apply Best Practices**: Keep docs close to code, document \"why\" not just \"what\", include examples, maintain with code changes"
  - "🔧 **Execute Improvements**: Update README for evolution, create ADRs for undocumented decisions, add inline docs for complex functions"
  - "🧪 **Validate Examples**: Ensure all documentation examples still work and are up-to-date with current codebase"
  - "📋 **Health Check**: Verify README exists, architecture documented, code has inline docs, setup instructions clear, examples current"
  - "echo '• Documentation structure is logical and navigable'"
