name: "Documentation-driven development workflow"
description: "Implement documentation-first development approach, ensuring documentation guides implementation"
triggers:
  - "document first"
  - "documentation driven"
  - "spec driven development"
  - "design documentation"
  - "document before code"
  - "design first"
project_types:
  - "python"
  - "typescript"
  - "vue"
  - "javascript"
  - "rust"
  - "go"
  - "general"
dependencies:
  - "docs directory structure"
  - "text editor for documentation"
conditions:
  - "When starting new features or modules"
  - "When system architecture needs definition"
  - "When API design is required"
  - "When establishing project standards"
steps:
  - "Create requirements document: Write `docs/requirements.md` with goals and success criteria"
  - "Design architecture: Create `docs/architecture.md` with component diagrams and tech decisions"
  - "Specify APIs: Document endpoints in `docs/api.md` with schemas and examples"
  - "Model data: Create `docs/data-model.md` with entity relationships and validation"
  - "Map user workflows: Document user journeys in `docs/user-guide.md`"
  - "Create implementation plan: Break down tasks in `docs/implementation-plan.md`"
  - "Write tests from specs: Create test cases based on documented requirements"
  - "Set up review process: Schedule documentation reviews with stakeholders"
  - "Implement following docs: Build according to documented specifications"
  - "Update docs with learnings: Revise documentation based on implementation feedback"
  - "Validate examples: Test all documented examples and code snippets"
  - "Create final user guide: Complete end-to-end documentation"
