name: "🧠 Session retrospective and knowledge capture"
description: "Analyze recent development session, capture lessons learned, and update project documentation"
triggers:
  - "session retrospective"
  - "capture knowledge"
  - "lessons learned"
  - "document session"
  - "session review"
  - "knowledge accumulation"
  - "update learnings"
project_types:
  - "python"
  - "typescript"
  - "vue"
  - "javascript"
  - "rust"
  - "go"
  - "general"
dependencies:
  - "git (for analyzing recent changes)"
conditions:
  - "After significant development sessions"
  - "When new patterns or solutions are discovered"
  - "After solving complex problems"
  - "When architectural decisions are made"
steps:
  - "🧠 **Begin session retrospective** by analyzing what you've accomplished this session"
  - "📊 **Review recent commits**: `git log --oneline --since='3 hours ago'` to see what changed"
  - "📁 **Check files modified**: `git log --name-only --since='3 hours ago' --pretty=format: | sort | uniq | head -20`"
  - "📈 **Assess code changes**: `git diff --stat HEAD~5..HEAD` to understand the scope of modifications"
  - "🔍 **Identify new patterns** - Look for new files created: `git log --diff-filter=A --name-only --since='3 hours ago'`"
  - "⚙️ **Check configuration changes**: `git log --name-only --since='3 hours ago' | grep -E '\\.(json|yaml|yml|toml|conf)$'`"
  - "📚 **Review documentation updates**: `git log --name-only --since='3 hours ago' | grep -E '\\.md$'`"
  - "💡 **Capture key learnings**: What new coding patterns, solutions, or architectural insights were developed?"
  - "🏛️ **Document architectural decisions**: Consider creating ADRs for significant choices made this session"
  - "🔧 **Note problem solutions**: What debugging techniques worked? What issues were resolved and how?"
  - "⚡ **Identify workflow improvements**: Were any development processes improved or automated?"
  - "🛠️ **Tool and dependency insights**: What new tools were evaluated? What worked well or poorly?"
  - "📝 **Update documentation checklist**: README, API docs, architecture docs, development guidelines, examples"
  - "🎯 **Reflect on session questions**: What worked well? What was challenging? What would make similar tasks easier?"
  - "✅ **Plan knowledge capture actions**: Document patterns, create ADRs, update guidelines, add inline docs"
  - "🧹 **Verify session cleanup**: Check for temporary files with `find . -name 'debug-*.html' -o -name '*.tmp' -o -name '*.bak'`"
  - "💾 **Ensure clean working tree**: `git status --porcelain` and commit important changes before ending session"
  - "🎉 **Complete session**: Run the \"cleanup\" workflow for comprehensive file hygiene if needed"
