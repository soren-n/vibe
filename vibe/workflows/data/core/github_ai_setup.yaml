name: "Setup GitHub AI Integration"
description: "🤖 Set up GitHub AI integration with copilot-instructions and VS Code chatmode"
triggers:
  - "setup github ai integration"
  - "setup ai integration"
  - "setup copilot"
  - "setup vs code integration"
  - "setup chatmode"
  - "github ai"
steps:
  - "📁 **Create Directory Structure**: Run `mkdir -p .github/chatmodes` to set up GitHub integration directories"
  - "📝 **Generate Copilot Instructions**: Create `.github/copilot-instructions.md` with a concise, Vibe-first guide (see example below)"
  - "🤖 **Configure Chat Mode**: Create `.github/chatmodes/vibe-agent.chatmode.md` using a workflow-first template with MCP tools listed"
  - "```markdown
    # Vibe Project — AI Agent Guide (Concise)
    - Core loop: ask Vibe MCP tool \"what workflow for [task]?\" → act → validate → capture.
    - Output: 150–250 words, ≤6 bullets, commands only when executed; delta updates.
    - MCP tools: start_workflow, get_workflow_status, advance_workflow, back_workflow, restart_workflow, break_workflow, list_workflow_sessions.
    - When uncertain: ask Vibe (e.g., quality checks, Python env, ADR, session).
    - Validation: ask \"what quality checks should I run?\"; print PASS/FAIL + next step.
    ```"
  - "```markdown
    ---
    description: Vibe workflow-first mode (concise, rate-limit aware)
    tools: ['codebase','fetch','findTestFiles','githubRepo','search','usages','terminal','str_replace_editor','bash']
    model: Claude Sonnet 4
    supportsAgentMode: true
    ---

    # Vibe Development Mode (Always Concise)
    Core loop, output policy, and MCP tools as above.
    ```"
  - "📋 **Add Documentation**: Create `.github/README.md` with GitHub AI integration documentation and usage guide"
  - "🔧 **Set Tool Permissions**: Configure chatmode with 'codebase', 'terminal', 'str_replace_editor', 'bash' tools for development tasks"
  - "📝 **Include Project Context**: Document project's workflow organization (49 YAML workflows in 9 categories)"
  - "🔄 **Document Vibe Integration**: Include instructions for using Vibe workflows as primary development interface"
  - "🔌 **Configure MCP Server**: Add MCP server configuration to VS Code settings for Vibe workflow integration"
  - "📖 **Document MCP Tools**: Include guidance on 7 available MCP tools (start_workflow, get_workflow_status, advance_workflow, back_workflow, restart_workflow, break_workflow, list_workflow_sessions)"
  - "✅ **Validate Setup**: Run `vibe check` to verify configuration is correct"
  - "🚀 **Test AI Integration**: Restart VS Code and test with `@vibe-agent` in chat or `vibe guide \"demonstrate AI integration\"`"
