name: "analysis"
description: "Analyze project structure and identify areas for improvement"
triggers:
  - "analy[sz]e"
  - "inspect"
  - "review"
  - "assess"
  - "evaluate"
  - "check"
  - "scan"
  - "audit"
  - "investigate"
  - "explore"
  - "understand"
  - "structure"
  - "breakdown"
  - "examine"
  - "study"
steps:
  - "🔍 **Start with dependency analysis** - Check for security patches and outdated dependencies that might need attention"
  - "📁 **Discover project structure** by examining source files: `find . -name '*.py' -o -name '*.js' -o -name '*.ts' -o -name '*.vue' -o -name '*.go' -o -name '*.rs' | head -20`"
  - "📋 **Identify project configuration files**: `find . -name 'package.json' -o -name 'pyproject.toml' -o -name 'Cargo.toml' -o -name 'go.mod' | head -10`"
  - "📚 **Locate documentation and tests**: `find . -name 'README*' -o -name 'docs' -type d` and `find . -name 'test*' -type d`"
  - "👀 **Get an overview of the project root**: `ls -la` to understand the basic structure"
  - "🌐 **For AI agents**: Research latest best practices for detected technologies using MCP Context7 tools"
  - "🔒 **Security review**: Look up current vulnerabilities and patches for identified dependencies"
  - "📈 **Performance opportunities**: Check for framework-specific optimization techniques and modern tooling"
  - "📖 **Documentation assessment**: Review if documentation standards are met and templates are current"
  - "✨ **Combine local analysis with online research** - Use GitHub, official docs, and technical articles for comprehensive insights"
dependencies: []
project_types: []
conditions: []
