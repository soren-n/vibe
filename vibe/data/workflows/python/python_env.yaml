name: python_env
description: Comprehensive python env guidance
triggers:
- create.*env
- environment.*ready
- python.*env
- python.*env.*complete
- setup.*env
- validate.*python.*environment
- venv.*setup
- verify.*env.*setup
- virtual.*env
steps:
- 'Check Python version: `python --version`'
- 'Install uv package manager: `curl -LsSf https://astral.sh/uv/install.sh | sh`'
- 'Create virtual environment: `uv venv` or `python -m venv .venv`'
- 'Activate environment: `source .venv/bin/activate` (Unix/macOS) or `.venv\Scripts\activate`
  (Windows)'
- 'Install project dependencies: `uv sync` or `pip install -r requirements.txt`'
- 'Verify environment setup: `uv run python -c "import sys; print(sys.executable)"`'
- 'Test package installation: `uv run python -c "import package_name"` (if applicable)'
project_types:
- python
items:
- Python version is compatible with project requirements
- Package manager (uv or pip) is installed and working
- Virtual environment is created and activated
- Project dependencies are successfully installed
- Python interpreter is using the correct environment
- Package imports work correctly
- Environment is isolated from system packages
- Development tools are accessible
- Environment can be reproduced on other machines
