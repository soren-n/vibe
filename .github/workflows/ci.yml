name: CI Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ develop, feature/* ]

jobs:
  quality-checks:
    name: Code Quality & Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run pre-commit hooks
      run: |
        uv run pre-commit install
        uv run pre-commit run --all-files

    - name: Run tests
      run: |
        uv run pytest -v --cov=vibe --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Test Vibe CLI functionality
      run: |
        uv run python -m vibe.cli guide "analyze project structure"
        uv run python test_mcp.py

  mcp-server-tests:
    name: MCP Server Testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mcp-server

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python for uv
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: mcp-server/package-lock.json

    - name: Install Python dependencies
      run: |
        cd ..
        uv sync --dev

    - name: Install dependencies
      run: npm ci

    - name: Run MCP server tests
      run: npm test

    - name: Test MCP server functionality
      run: node test.js

  integration-tests:
    name: Integration Testing
    runs-on: ubuntu-latest
    needs: [quality-checks, mcp-server-tests]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Setup Node.js for MCP server
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install all dependencies
      run: |
        uv sync --dev
        cd mcp-server && npm ci

    - name: Run integration tests
      run: |
        # Start MCP server in background
        cd mcp-server && node index.js &
        MCP_PID=$!

        # Wait for server to start
        sleep 2

        # Run integration tests
        uv run python test_mcp.py

        # Cleanup
        kill $MCP_PID || true

  workflow-validation:
    name: Workflow Validation
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: uv sync --dev

    - name: Validate workflow YAML files
      run: |
        uv run python -c "
        import yaml
        from pathlib import Path
        from vibe.workflows.loader import WorkflowLoader

        loader = WorkflowLoader()
        workflows = loader.load_workflows()
        print(f'âœ… Successfully loaded {len(workflows)} workflows')
        "

    - name: Test workflow quality
      run: uv run pytest tests/test_workflow_yaml_quality.py -v

    - name: Test workflow guidance
      run: |
        uv run vibe guide "run quality checks"
        uv run vibe guide "analyze project structure"
        uv run vibe guide "session retrospective"
