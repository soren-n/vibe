feat!: Implement comprehensive automated versioning and CI/CD pipeline

BREAKING CHANGE: Switch from manual to automated versioning system

- Add semantic-release with conventional commits for automated version bumping
- Implement dynamic versioning using hatch-vcs (removes static version from pyproject.toml)
- Create comprehensive GitHub Actions workflow for CI/CD pipeline
- Add automated PyPI publishing with OIDC trusted publishing
- Implement VS Code extension automated publishing with Azure PAT
- Add version synchronization script for coordinated releases
- Configure release automation with changelog generation
- Add quality gates and testing in CI pipeline
- Update tests to handle dynamic versioning patterns
- Add comprehensive release documentation and templates

Components added:
- .releaserc.json: Semantic release configuration
- .github/workflows/release.yml: Complete CI/CD pipeline
- scripts/sync_versions.py: Version coordination script
- Enhanced pyproject.toml with dynamic versioning
- Updated VS Code extension package.json for automation

This establishes a production-ready automated release system that will:
1. Automatically version releases based on conventional commits
2. Generate changelogs and GitHub releases
3. Publish to PyPI and VS Code Marketplace
4. Maintain version synchronization across components
