name: Project Cleanup and Maintenance
description: Comprehensive cleanup of temporary files, build artifacts, and development
  remnants.
triggers:
  - clean up
  - cleanup
  - cleanup.*complete
  - project cleanup
  - project.*cleaned
  - remove temp files
  - tidy up
  - validate.*cleanup
  - verify.*cleanup
  - maintenance cleanup
steps:
  - 'Identify debug artifacts: Locate debug files and temporary investigation materials.'
  - 'Find legacy files: Search for backup files, versioned copies, and deprecated assets.'
  - 'Locate temporary files: Identify editor temporary files, cache files, and system
    artifacts.'
  - 'Remove build artifacts: Clean outdated build outputs, temporary distributions,
    and cached builds.'
  - 'Clean dependency artifacts: Remove obsolete package installations and cached downloads.'
  - 'Update ignore patterns: Add common temporary file patterns to version control ignore
    files.'
  - 'Verify git repository status: Ensure no important files are accidentally excluded.'
  - 'Remove obsolete CI workarounds: Eliminate deprecated build steps and platform-specific
    fixes.'
  - 'Clean coverage reports: Remove outdated test coverage artifacts and temporary reports.'
  - 'Update documentation: Remove investigation notes and temporary documentation files.'
  - 'Validate functionality: Ensure cleanup has not affected core project functionality.'
items:
  - Debug and investigation artifacts are removed.
  - Legacy and backup files are cleaned up.
  - Temporary and cache files are deleted.
  - Build artifacts are properly managed.
  - Version control ignore patterns are updated.
  - CI/CD workflows are cleaned of obsolete steps.
  - Project structure reflects current state.
  - Editor temporary files are removed.
  - Build artifacts are cleaned.
  - Important files are still tracked in git.
  - .gitignore is updated with common temporary patterns.
  - Language standards are maintained (no emojis).
  - Project structure is clean and organized.
