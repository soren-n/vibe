name: Optional Dependency Implementation
description: Implement optional dependencies with graceful fallbacks for better user
  experience.
triggers:
  - optional dependencies
  - graceful fallback
  - conditional imports
  - optional features
  - dependency isolation
steps:
  - 'Identify optional features: List features that could work without specific dependencies.'
  - 'Design fallback behavior: Plan what happens when optional dependencies are missing.'
  - 'Implement conditional loading: Wrap optional dependencies in conditional loading
    blocks with meaningful fallbacks.'
  - 'Create feature flags: Use boolean flags to track which optional features are available.'
  - 'Add helpful error messages: Provide clear installation instructions when optional
    features are used but dependencies are missing.'
  - 'Document optional dependencies: Clearly mark which dependencies are optional in
    documentation.'
  - "Create installation extras: Use your build system's extras mechanism for optional
    dependency groups."
  - 'Test without optional deps: Ensure core functionality works when optional dependencies
    are missing.'
  - 'Provide degraded functionality: Offer reduced but working features instead of hard
    failures.'
  - 'Add runtime warnings: Warn users when optional features are disabled due to missing
    dependencies.'
  - 'Update CLI help: Include information about optional features and their requirements.'
  - 'Consider lazy loading: Load heavy dependencies only when their features are
    actually used.'
dependencies: []
project_types: []
conditions: []
