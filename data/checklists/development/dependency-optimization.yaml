name: Dependency Optimization Validation Checklist
description:
  Comprehensive validation checklist for dependency optimization and minimization
  across all package managers.
triggers:
  - dependency optimization
  - package minimization
  - dependency cleanup validation
  - optimize packages
project_types:
  - python
  - javascript
  - typescript
  - nodejs
conditions: []
dependencies: []
items:
  - All dependencies are actively used in the current codebase.
  - Unused dependencies have been identified and removed from package manifests.
  - Development dependencies are properly separated from production dependencies.
  - Meta-packages or wrapper dependencies are removed when individual components are
    available.
  - Heavy dependencies are justified and alternatives have been evaluated.
  - Build tool dependencies are appropriate for the project complexity.
  - Security audit shows no vulnerabilities in remaining dependencies.
  - Package lock files have been updated after dependency changes.
  - CI/CD workflows have been updated to remove obsolete workarounds.
  - All tests pass with the optimized dependency set.
  - Build process completes successfully with reduced dependencies.
  - Application functionality is preserved after optimization.
  - Installation time has been measured and shows improvement.
  - Bundle size or distribution size has been reduced.
  - Documentation accurately reflects current dependency requirements.
  - Installation instructions are updated and tested.
  - Dependency tree shows no unnecessary transitive dependencies.
  - Optional dependencies are properly documented and implemented.
  - Error messages provide clear guidance for missing optional dependencies.
