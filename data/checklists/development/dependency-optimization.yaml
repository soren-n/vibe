name: 'Dependency Optimization Checklist'
description: 'Validation checklist for dependency optimization and minimization efforts'
triggers:
  - 'dependency optimization'
  - 'package minimization'
  - 'dependency cleanup validation'
project_types:
  - 'python'
conditions: []
dependencies: []
items:
  - 'All dependencies are actually used in the codebase'
  - 'Heavy dependencies (>10MB) are justified and necessary'
  - 'Alternative lightweight packages have been evaluated'
  - 'Non-critical features use optional dependencies with graceful fallbacks'
  - 'Standard library alternatives have been considered'
  - 'Development dependencies are not included in production requirements'
  - 'Package installation size has been measured and optimized'
  - 'Startup time impact of dependencies has been assessed'
  - 'All removed dependencies have been tested for breaking changes'
  - 'Documentation reflects current dependency requirements'
  - 'Installation instructions are updated and accurate'
  - 'Dependency tree is clean with no unnecessary transitive dependencies'
  - 'Core functionality works without optional dependencies'
  - 'Error messages guide users to install missing optional dependencies'
